{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\reactjs\\\\reactapp\\\\src\\\\component\\\\home.js\";\n/*import React, { useState } from \"react\"\r\nimport \"./header.css\"\r\n//import img1 from \"./person1.jpg\"; \r\n//import img2 from \"./person2.jpg\";\r\n//import img3 from \"./person3.jpg\";\r\n//import img4 from \"./person4.jpg\";\r\n\r\n\r\nconst EmployeePayrollForm = () => {\r\n  const checkboxOptions = [\"HR\", \"Sales\", \"Finance\", \"Engineer\", \"Others\"];\r\n\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    gender: \"\",\r\n    department: [],\r\n    salary: \"\",\r\n    startDate: \"\",\r\n    notes: \"\",\r\n    profileImage: \"\",\r\n  });\r\n\r\n const handleInputChange = (event) => {\r\n    console.log(event.target.value);\r\n    \r\n    const { name, value, type } = event.target;\r\n\r\n    setFormData((prevData) => ({\r\n      ...prevData,\r\n      [name]:value,\r\n    }));\r\n\r\n  };\r\n\r\n  // Specific handler for checkbox changes\r\n  const handleCheckboxChange = (e) => {\r\n    const { value, checked } = e.target;\r\n  \r\n    setFormData((prevData) => {\r\n      let updatedDepartment = [...prevData.department];\r\n  \r\n      if (checked) {\r\n        // Add the value if the box is checked\r\n        updatedDepartment.push(value);\r\n      } else {\r\n        // Remove the value if the box is unchecked\r\n        updatedDepartment = updatedDepartment.filter((item) => item !== value);\r\n      }\r\n  \r\n      return {\r\n        ...prevData,\r\n        department: updatedDepartment,\r\n      };\r\n    });\r\n  };\r\n  \r\n  const handleProfileSelect = (image) => {\r\n    setFormData((prev) => ({ ...prev, profileImage: image }));\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(\"Submitted Data:\", formData);\r\n  };\r\n  const handleCancel = () => {\r\n    console.log(\"Cancel button clicked\");\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setFormData({\r\n      name: \"\",\r\n      gender: \"\",\r\n      department: [],\r\n      salary: \"\",\r\n      startDate: \"\",\r\n      notes: \"\",\r\n      profileImage: \"\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div id=\"header1\">\r\n        <h1>EMPLOYEE</h1>\r\n        <h2>PAYROLL</h2>\r\n      </div>\r\n   \r\n    <div className=\"form-container\">\r\n      <div className=\"form-container2\">\r\n        <h1>Employee Payroll Form</h1><br>\r\n        </br>\r\n      <form onSubmit={handleSubmit}>\r\n        <label>\r\n        Name:\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={formData.name}\r\n            onChange={handleInputChange}\r\n          />\r\n        </label>\r\n        <label>\r\n            Profile Image:\r\n            <div className=\"profile-images\">\r\n          {[].map((image, index) => (\r\n                <img\r\n                  key={index}\r\n                  src={image}\r\n                  alt=\"image profile\"\r\n                  className={formData.profileImage === image ? \"selected\" : \"\"}\r\n                  onClick={() => handleProfileSelect(image)}\r\n                />\r\n              ))} \r\n            </div>\r\n          </label>\r\n        <label>\r\n          Gender:\r\n          <label>\r\n            <input\r\n              type=\"radio\"\r\n              name=\"gender\"\r\n              value=\"Male\"\r\n              checked={formData.gender === \"Male\"}\r\n              onChange={handleInputChange}\r\n            />\r\n            Male\r\n          </label>\r\n          <label>\r\n            <input\r\n              type=\"radio\"\r\n              name=\"gender\"\r\n              value=\"Female\"\r\n              checked={formData.gender === \"Female\"}\r\n              onChange={handleInputChange}\r\n            />\r\n            Female\r\n          </label>\r\n        </label>\r\n\r\n        <div className=\"department-container\">\r\n  Department:\r\n  {checkboxOptions.map((option) => (\r\n    <label key={option}>\r\n      <input\r\n        type=\"checkbox\"\r\n        value={option} // Correctly set the value\r\n        checked={formData.department.includes(option)} // Reflect current state\r\n        onChange={handleCheckboxChange} // Handle clicks\r\n      />\r\n      {option}\r\n    </label>\r\n  ))}\r\n</div>\r\n\r\n        <label>\r\n          Salary:\r\n          <select\r\n            name=\"salary\"\r\n            value={formData.salary}\r\n            onChange={handleInputChange}\r\n          >\r\n            <option value=\"\">Select Salary</option>\r\n            <option value=\"20k\">20k</option>\r\n            <option value=\"40k\">40k</option>\r\n            <option value=\"60k\">60k</option>\r\n            <option value=\"80k\">80k</option>\r\n          </select>\r\n        </label>\r\n\r\n        <label>\r\n          Start Date:\r\n          <input\r\n           type=\"date\" \r\n           name=\"startDate\" \r\n           value={formData.startDate} onChange={handleInputChange}\r\n           />\r\n            \r\n        </label>\r\n\r\n        <label>\r\n          Notes:\r\n          <textarea\r\n            name=\"notes\"\r\n            value={formData.notes}\r\n            onChange={handleInputChange}\r\n          ></textarea>\r\n        </label>\r\n\r\n        <div className=\"form-buttons\">\r\n          <button type=\"button\" onClick={handleReset}>\r\n            Reset\r\n          </button>\r\n          <button type=\"submit\" onClick={handleSubmit}>\r\n          Submit\r\n        </button>\r\n        <button type=\"button\" onClick={handleCancel} >\r\n          Cancel\r\n        </button>\r\n\r\n        </div>\r\n      </form>\r\n    </div>\r\n    </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmployeePayrollForm;*/\n\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Child({\n  name\n}) {\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Hello, \", name, \"!\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 213,\n    columnNumber: 10\n  }, this);\n}\n_c = Child;\nfunction Parent() {\n  const name = \"Alice\";\n  return /*#__PURE__*/_jsxDEV(Child, {\n    name: name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 218,\n    columnNumber: 10\n  }, this);\n}\n_c2 = Parent;\nexport default Parent;\nvar _c, _c2;\n$RefreshReg$(_c, \"Child\");\n$RefreshReg$(_c2, \"Parent\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Child","name","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Parent","_c2","$RefreshReg$"],"sources":["C:/Users/PC/Desktop/reactjs/reactapp/src/component/home.js"],"sourcesContent":["\r\n/*import React, { useState } from \"react\"\r\nimport \"./header.css\"\r\n//import img1 from \"./person1.jpg\"; \r\n//import img2 from \"./person2.jpg\";\r\n//import img3 from \"./person3.jpg\";\r\n//import img4 from \"./person4.jpg\";\r\n\r\n\r\nconst EmployeePayrollForm = () => {\r\n  const checkboxOptions = [\"HR\", \"Sales\", \"Finance\", \"Engineer\", \"Others\"];\r\n\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    gender: \"\",\r\n    department: [],\r\n    salary: \"\",\r\n    startDate: \"\",\r\n    notes: \"\",\r\n    profileImage: \"\",\r\n  });\r\n\r\n const handleInputChange = (event) => {\r\n    console.log(event.target.value);\r\n    \r\n    const { name, value, type } = event.target;\r\n\r\n    setFormData((prevData) => ({\r\n      ...prevData,\r\n      [name]:value,\r\n    }));\r\n\r\n  };\r\n\r\n  // Specific handler for checkbox changes\r\n  const handleCheckboxChange = (e) => {\r\n    const { value, checked } = e.target;\r\n  \r\n    setFormData((prevData) => {\r\n      let updatedDepartment = [...prevData.department];\r\n  \r\n      if (checked) {\r\n        // Add the value if the box is checked\r\n        updatedDepartment.push(value);\r\n      } else {\r\n        // Remove the value if the box is unchecked\r\n        updatedDepartment = updatedDepartment.filter((item) => item !== value);\r\n      }\r\n  \r\n      return {\r\n        ...prevData,\r\n        department: updatedDepartment,\r\n      };\r\n    });\r\n  };\r\n  \r\n  const handleProfileSelect = (image) => {\r\n    setFormData((prev) => ({ ...prev, profileImage: image }));\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(\"Submitted Data:\", formData);\r\n  };\r\n  const handleCancel = () => {\r\n    console.log(\"Cancel button clicked\");\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setFormData({\r\n      name: \"\",\r\n      gender: \"\",\r\n      department: [],\r\n      salary: \"\",\r\n      startDate: \"\",\r\n      notes: \"\",\r\n      profileImage: \"\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div id=\"header1\">\r\n        <h1>EMPLOYEE</h1>\r\n        <h2>PAYROLL</h2>\r\n      </div>\r\n   \r\n    <div className=\"form-container\">\r\n      <div className=\"form-container2\">\r\n        <h1>Employee Payroll Form</h1><br>\r\n        </br>\r\n      <form onSubmit={handleSubmit}>\r\n        <label>\r\n        Name:\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={formData.name}\r\n            onChange={handleInputChange}\r\n          />\r\n        </label>\r\n        <label>\r\n            Profile Image:\r\n            <div className=\"profile-images\">\r\n          {[].map((image, index) => (\r\n                <img\r\n                  key={index}\r\n                  src={image}\r\n                  alt=\"image profile\"\r\n                  className={formData.profileImage === image ? \"selected\" : \"\"}\r\n                  onClick={() => handleProfileSelect(image)}\r\n                />\r\n              ))} \r\n            </div>\r\n          </label>\r\n        <label>\r\n          Gender:\r\n          <label>\r\n            <input\r\n              type=\"radio\"\r\n              name=\"gender\"\r\n              value=\"Male\"\r\n              checked={formData.gender === \"Male\"}\r\n              onChange={handleInputChange}\r\n            />\r\n            Male\r\n          </label>\r\n          <label>\r\n            <input\r\n              type=\"radio\"\r\n              name=\"gender\"\r\n              value=\"Female\"\r\n              checked={formData.gender === \"Female\"}\r\n              onChange={handleInputChange}\r\n            />\r\n            Female\r\n          </label>\r\n        </label>\r\n\r\n        <div className=\"department-container\">\r\n  Department:\r\n  {checkboxOptions.map((option) => (\r\n    <label key={option}>\r\n      <input\r\n        type=\"checkbox\"\r\n        value={option} // Correctly set the value\r\n        checked={formData.department.includes(option)} // Reflect current state\r\n        onChange={handleCheckboxChange} // Handle clicks\r\n      />\r\n      {option}\r\n    </label>\r\n  ))}\r\n</div>\r\n\r\n        <label>\r\n          Salary:\r\n          <select\r\n            name=\"salary\"\r\n            value={formData.salary}\r\n            onChange={handleInputChange}\r\n          >\r\n            <option value=\"\">Select Salary</option>\r\n            <option value=\"20k\">20k</option>\r\n            <option value=\"40k\">40k</option>\r\n            <option value=\"60k\">60k</option>\r\n            <option value=\"80k\">80k</option>\r\n          </select>\r\n        </label>\r\n\r\n        <label>\r\n          Start Date:\r\n          <input\r\n           type=\"date\" \r\n           name=\"startDate\" \r\n           value={formData.startDate} onChange={handleInputChange}\r\n           />\r\n            \r\n        </label>\r\n\r\n        <label>\r\n          Notes:\r\n          <textarea\r\n            name=\"notes\"\r\n            value={formData.notes}\r\n            onChange={handleInputChange}\r\n          ></textarea>\r\n        </label>\r\n\r\n        <div className=\"form-buttons\">\r\n          <button type=\"button\" onClick={handleReset}>\r\n            Reset\r\n          </button>\r\n          <button type=\"submit\" onClick={handleSubmit}>\r\n          Submit\r\n        </button>\r\n        <button type=\"button\" onClick={handleCancel} >\r\n          Cancel\r\n        </button>\r\n\r\n        </div>\r\n      </form>\r\n    </div>\r\n    </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmployeePayrollForm;*/\r\n\r\nimport React from \"react\";\r\n\r\nfunction Child({ name }) {\r\n  return <p>Hello, {name}!</p>;\r\n}\r\n\r\nfunction Parent() {\r\n  const name = \"Alice\";\r\n  return <Child name={name} />;  \r\n}\r\n\r\nexport default Parent;\r\n"],"mappingsvB,oBAAOF,OAAA;IAAAG,QAAA,GAAG,SAAO,EAACD,IAAI,EAAC,GAAC;EAAA;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;AAC9B;AAACC,EAAA,GAFQP,KAAK;AAId,SAASQ,MAAMA,CAAA,EAAG;EAChB,MAAMP,IAAI,GAAG,OAAO;EACpB,oBAAOF,OAAA,CAACC,KAAK;IAACC,IAAI,EAAEA;EAAK;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC9B;AAACG,GAAA,GAHQD,MAAM;AAKf,eAAeA,MAAM;AAAC,IAAAD,EAAA,EAAAE,GAAA;AAAAC,YAAA,CAAAH,EAAA;AAAAG,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}